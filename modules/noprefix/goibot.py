# modules/noprefix/sim.py

import requests
import urllib.parse
from zlapi.models import Message

des = {
    'version': "1.1.3",
    'credits': "Anh Qu√Ω & Nguy·ªÖn ƒê·ª©c T√†i",
    'description': "Tr·∫£ l·ªùi t·ª± ƒë·ªông khi ng∆∞·ªùi d√πng g·ªçi 'sim'",
    'power': "Th√†nh vi√™n"
}

def handle_noprefix_sim(message, message_object, thread_id, thread_type, author_id, client):
    if not isinstance(message, str):
        return  # Ch·ªâ x·ª≠ l√Ω n·∫øu l√† chu·ªói

    lowered = message.lower().strip()

    # N·∫øu tin nh·∫Øn b·∫Øt ƒë·∫ßu b·∫±ng "sim", "sim ∆°i", "sim √†"
    if lowered.startswith("sim"):
        # G·ª° ti·ªÅn t·ªë
        content = lowered
        for prefix in ["sim ∆°i", "sim √†", "sim"]:
            if content.startswith(prefix):
                content = content[len(prefix):].strip()
                break

        # N·∫øu kh√¥ng c√≥ n·ªôi dung h·ªèi th√¨ nh·∫Øc ng∆∞·ªùi d√πng
        if not content:
            client.sendMessage(Message(text="üó£Ô∏è B·∫°n mu·ªën h·ªèi g√¨ Sim n√®?"), thread_id, thread_type)
            return

        # Encode v√† g·ªçi API
        encoded = urllib.parse.quote(content, safe='')
        api_url = f"https://submxh.dichvudev.xyz/ai.php?reply={encoded}"

        try:
            res = requests.get(api_url, timeout=10)
            res.raise_for_status()
            data = res.json()

            reply_text = data.get("result", "‚ùì Sim kh√¥ng hi·ªÉu b·∫°n n√≥i g√¨...")

            client.replyMessage(
                Message(text=f"ü§ñ Sim: {reply_text}"),
                message_object,
                thread_id,
                thread_type,
                ttl=6000
            )

        except Exception as e:
            client.sendMessage(Message(text=f"‚ö†Ô∏è Sim b·ªã l·ªói: {str(e)}"), thread_id, thread_type)

# H√†m b·∫Øt bu·ªôc ƒë·ªÉ bot load module noprefix
def ft_vxkiue():
    return {
        '*': handle_noprefix_sim  # '*' ƒë·ªÉ b·∫Øt to√†n b·ªô tin nh·∫Øn trong ch·∫ø ƒë·ªô noprefix
    }
